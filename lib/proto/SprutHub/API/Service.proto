syntax = "proto3";

option java_multiple_files = true;
option java_package = "org.makesimple.SprutHub.API";
option java_outer_classname = "ServiceProto";

package SprutHub.API;

import "SprutHub/API/Characteristic.proto";
import "SprutHub/API/Utils.proto";

service ServiceService {
  rpc list(ServiceListRequest) returns (ServicesMessage);
  rpc get(ServiceGetRequest) returns (ServiceMessage);
  rpc update(ServiceUpdateRequest) returns (ServiceMessage);
  rpc types(ServiceTypesRequest) returns (ServiceTypesMessage);
  rpc subscribe(ServiceSubscribeRequest) returns (EmptyResponse);
  rpc event(ServiceEvent) returns (EmptyResponse);
}

message ServiceListRequest {
  optional uint32 aId = 1;
  string expand = 2;
}

message ServiceGetRequest {
  optional uint32 aId = 1;
  optional uint32 sId = 2;
  string expand = 3;
}

message ServiceUpdateRequest {
  optional uint32 aId = 1;
  optional uint32 sId = 2;
  optional string name = 3;
  optional bool visible = 4;
  optional string data = 5;
}

message ServiceCreateRequest {
  optional string name = 1;
  optional string type = 2;
  repeated string optional = 3;
}

message ServiceMessage {
  optional uint32 aId = 1;
  optional uint32 sId = 2;
  optional string name = 3;
  optional string rawName = 4;
  optional string type = 5;
  optional string typeName = 6;
  optional string googleType = 7;
  optional string yandexType = 8;
  optional string mailRuType = 9;
  optional bool visible = 10;
  optional string data = 11; // TODO
  repeated CharacteristicMessage characteristic = 12;
}

message ServicesMessage {
  repeated ServiceMessage service = 1;
}

message ServiceTypesRequest {}

message ServiceTypeMessage {
  optional string id = 1;
  optional string shortId = 2;
  optional string type = 3;
  optional string name = 4;
  repeated CharacteristicTypeMessage required = 5;
  repeated CharacteristicTypeMessage optional = 6;
}

message ServiceTypesMessage {
  repeated ServiceTypeMessage type = 1;
}

message ServiceSubscribe {
  optional uint32 aId = 1;
  optional uint32 sId = 2;
  optional string sType = 3;
  repeated SubscribeType event = 4;
}

message ServiceSubscribeRequest {
  repeated ServiceSubscribe subscribe = 1;
}

message ServiceEvent {
  optional SubscribeType event = 1;
  repeated ServiceMessage service = 2;
}
